<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">
	<context:component-scan base-package="com.wondersgroup.**.controller" />
	<mvc:resources location="pages/" mapping="pages/**" />
	<mvc:annotation-driven
		content-negotiation-manager="contentNegotiationManager"
		conversion-service="conversionService">
		<mvc:message-converters register-defaults="true">
			<!-- 使请求返回的AcceptCharset不输出,减少网络流量 -->
			<bean class="com.wondersgroup.common.utils.UTF8StringHttpMessageConverter">
				<property name="writeAcceptCharset" value="false" />
			</bean>
			<!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8" />
			</bean>
			<!-- 将Jackson2HttpMessageConverter的默认格式化输出设为true -->
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>

	<bean id="conversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">
			<list>

			</list>
		</property>
	</bean>
	
	<!-- org.springframework.web.accept.ContentNegotiationManagerFactoryBean -->
	<bean id="contentNegotiationManager"
		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="parameterName" value="f"></property>
		<property name="ignoreAcceptHeader" value="true" />
		<property name="favorParameter" value="true" />
		<property name="favorPathExtension" value="true" />
		<property name="defaultContentType" value="application/json" />

		<property name="mediaTypes">
			<value>
				json=application/json
				xml=application/xml
				html=text/html
			</value>
		</property>
	</bean>
	
	<!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
	<!-- org.springframework.web.accept.ContentNegotiationManagerFactoryBean -->
	<!-- <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver"> 
		<property name="contentNegotiationManager" ref="contentNegotiationManager"></property> 
		<property name="defaultViews"> <list> <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/> 
		<bean class="org.springframework.web.servlet.view.xml.MappingJackson2XmlView"/> 
		</list> </property> <property name="viewResolvers"> <list> <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
		<property name="prefix" value="/WEB-INF/views"/> <property name="suffix" 
		value=".jsp"/> </bean> </list> </property> </bean> -->

	<!-- 容器默认的DefaultServletHandler处理 所有静态内容与无RequestMapping处理的URL -->
	<mvc:default-servlet-handler />

	<!-- 将Controller抛出的异常转到特定View, 保持SiteMesh的装饰效果 -->
	<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Throwable">error/500</prop>
			</props>
		</property>
	</bean>

	<!-- end -->
		<aop:aspectj-autoproxy/>
</beans>
